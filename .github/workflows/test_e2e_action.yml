name: Test action for e2e testing

on:
  push:
    branches:
      - main
      - robot_action

  pull_request:
    branches:
      - main

jobs:
  test_e2e_action:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        include:
          # no overwrites
          - frontend-docker-image: ""
            backend-docker-image: ""
          # overwrite all
          - frontend-docker-image: "hsldevcom/jore4-ui:latest"
            backend-docker-image: "hsldevcom/jore4-backend:latest"
          # overwrite some
          - frontend-docker-image: "hsldevcom/jore4-ui:latest"
            backend-docker-image: ""

    steps:
      # note that we don't checkout code in this job to make sure that the script works from an empty workspace!
      - name: Verifying that current workspace is empty
        run: '[ -z "$(ls -A)" ]'

      - name: Extract branch name to env variable
        run: |
          # In pull requests
          BRANCH_NAME="${GITHUB_HEAD_REF}"
          [[ ${BRANCH_NAME} == "" ]] && {
            # In branch pushes
            BRANCH_NAME="$(echo "${GITHUB_REF}" | cut -d '/' -f 3-)"
          }
          echo "BRANCH_NAME=${BRANCH_NAME}" >> "${GITHUB_ENV}"

      - name: make folder for reports
        run: mkdir reports

      - name: run e2e smoke tests
        id: tests
        uses: HSLdevcom/jore4-robot/.github/action@${BRANCH_NAME}
        with:
          frontend_version: ${{ matrix.frontend-docker-image }}
          backend_version: ${{ matrix.backend-docker-image }}

      - name: docker copy
        run: docker cp robot-tests:/tests/output/. ${{ github.workspace }}/reports/

      - name: Verify that application is up and running
        run: |
          for i in {1..20}; do
            curl --fail http://localhost:8000 --output /dev/null --silent && break
            sleep 5
            echo $i
          done

      - name: Testing that the correct version got deployed from frontend
        # if matrix.frontend-docker-image is defined should use that, otherwise use default
        run: |
          FRONTEND_DEPLOYED_VERSION=`kubectl get deployment jore4-frontend --namespace hsl-jore4 --output jsonpath='{.spec.template.spec.containers[0].image}'`
          if [[ "${{ matrix.frontend-docker-image }}" == "" ]]
          then
            [[ "$FRONTEND_DEPLOYED_VERSION" != "${{ matrix.frontend-docker-image }}" ]]
          else
            [[ "$FRONTEND_DEPLOYED_VERSION" == "${{ matrix.frontend-docker-image }}" ]]
          fi

      - name: Testing that the correct version got deployed from backend
        # if matrix.backend-docker-image is defined should use that, otherwise use default
        run: |
          BACKEND_DEPLOYED_VERSION=`kubectl get deployment jore4-backend --namespace hsl-jore4 --output jsonpath='{.spec.template.spec.containers[0].image}'`
          if [[ "${{ matrix.backend-docker-image }}" == "" ]]
          then
            [[ "$BACKEND_DEPLOYED_VERSION" != "${{ matrix.backend-docker-image }}" ]]
          else
            [[ "$BACKEND_DEPLOYED_VERSION" == "${{ matrix.backend-docker-image }}" ]]
          fi

      - name: Stop Kind
        run: "curl https://raw.githubusercontent.com/HSLdevcom/jore4-flux/e2e/kindcluster.sh | bash -s -- stop"
