name: Run Robot Framework Tests Manually
on:
  workflow_dispatch:
    inputs:
      env:
        description: "In which env you want to run the tests in"
        default: test
        required: true
      browser:
        description: "Which browser you want to use"
        default: chromium
        required: true
      tag:
        description: 'Tag for tests to run. Use "*" to run all'
        default: smoke
        required: true
jobs:
  run_tests:
    runs-on: ubuntu-20.04
    continue-on-error: true
    steps:
      - name: make folder for reports
        run: mkdir reports

      - name: Setup e2e cluster with the remote script
        run: "curl https://raw.githubusercontent.com/HSLdevcom/jore4-flux/remote-e2e-testing/remotecluster.sh | bash"

      - name: Verify that application is up and running
        run: |
          for i in {1..20}; do
            curl --fail http://localhost:8000 --output /dev/null --silent && break
            sleep 5
            echo $i
          done

      - name: Run Robot tests in started environment
        run: |
          docker run --name "robot-tests"\
            --network="host" \
              hsldevcom/jore4-robot:latest \
                bash -c "robot -v ENV:localhost -v BROWSER:$chromium --outputdir /tests/output /tests"

      # - name: run e2e smoke tests
      #   id: test-results
      #   uses: HSLdevcom/jore4-robot/.github/action@robot_action
      #   with:
      #     test_env: ${{ github.event.inputs.env }}
      #     browser: ${{ github.event.inputs.browser }}
      #     test_tag: ${{ github.event.inputs.tag }}

      # - name: echo log.html
      #   if: always()
      #   run: echo "the file is this ${{ steps.test-results.outputs.results }}"

      - name: docker copy
        if: always()
        run: docker cp robot-tests:/tests/output/. ${{ github.workspace }}/reports/

      - name: Upload test results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: reports
          path: ${{ github.workspace }}/reports
